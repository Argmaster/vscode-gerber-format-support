{
    "name": "gerber-x3-x2-format-support",
    "displayName": "Gerber X3/X2 Format Support",
    "description": "Visual Studio Code support for Gerber X3/X2 file format",
    "version": "2.1.0",
    "license": "SEE LICENSE IN LICENSE.md",
    "maintainers": [
        {
            "name": "Krzysztof Wi≈õniewski",
            "email": "argmaster.world@gmail.com",
            "url": "https://www.linkedin.com/in/krzysztof-wisniewski-pl/"
        }
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/Argmaster/vscode-gerber-format-support.git"
    },
    "bugs": {
        "url": "https://github.com/Argmaster/vscode-gerber-format-support/issues",
        "email": "argmaster.world@gmail.com"
    },
    "categories": [
        "Programming Languages",
        "Language Packs",
        "Linters",
        "Formatters"
    ],
    "capabilities": {
        "untrustedWorkspaces": {
            "supported": true
        },
        "virtualWorkspaces": true
    },
    "keywords": [
        "gerber",
        "gerberx3",
        "format",
        "lint",
        "pcb",
        "embedded",
        "images",
        "x3"
    ],
    "icon": "icon/icon.png",
    "publisher": "argmaster",
    "activationEvents": [
        "onLanguage:gerber",
        "onLanguage:plaintext"
    ],
    "main": "./dist/extension.js",
    "engines": {
        "vscode": "^1.70.0"
    },
    "dependencies": {
        "@vscode/vsce": "^2.22.0",
        "fs-extra": "^11.1.1",
        "ovsx": "^0.7.1",
        "vscode-languageclient": "^8.1.0",
        "vscode-languageserver-textdocument": "^1.0.8"
    },
    "devDependencies": {
        "@types/fs-extra": "^11.0.2",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.70.0",
        "@typescript-eslint/eslint-plugin": "^6.4.1",
        "@typescript-eslint/parser": "^6.4.1",
        "@vscode/test-electron": "^2.3.4",
        "eslint": "^8.47.0",
        "glob": "^10.3.3",
        "mocha": "^10.2.0",
        "ts-loader": "^9.4.4",
        "typescript": "^5.1.6",
        "webpack": "^5.88.2",
        "webpack-cli": "^5.1.4"
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "contributes": {
        "languages": [
            {
                "id": "gerber",
                "aliases": [
                    "Gerber",
                    "gerber"
                ],
                "extensions": [
                    ".gbr",
                    ".grb",
                    ".gto",
                    ".gts",
                    ".gtl",
                    ".g1",
                    ".g2",
                    ".gp1",
                    ".gp2",
                    ".gbl",
                    ".gpb",
                    ".gbs",
                    ".gbo",
                    ".gd1",
                    ".gg1",
                    ".gko",
                    ".gm1",
                    ".gm2",
                    ".gm3",
                    ".gtp",
                    ".gbp"
                ],
                "configuration": "./language/language-configuration.json"
            },
            {
                "id": "gerber-macro",
                "configuration": "./language/language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "gerber",
                "scopeName": "source.gerber",
                "path": "./language/syntaxes/gerber.tmLanguage.json"
            },
            {
                "language": "gerber-macro",
                "scopeName": "source.gerber-macro",
                "path": "./language/syntaxes/gerber-macro.tmLanguage.json"
            }
        ],
        "commands": [
            {
                "command": "gerber_x3_x2_format_support.restart",
                "title": "Gerber: Restart language server"
            },
            {
                "command": "gerber_x3_x2_format_support.render",
                "title": "Gerber: Render current file"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "group": "gerber",
                    "command": "gerber_x3_x2_format_support.render",
                    "when": "resourceLangId == gerber"
                }
            ]
        },
        "configuration": {
            "properties": {
                "gerber_x3_x2_format_support.enable": {
                    "title": "Enable Language Server",
                    "description": "Whether to enable the PyGerber language server.",
                    "default": true,
                    "scope": "window",
                    "type": "boolean"
                },
                "gerber_x3_x2_format_support.args": {
                    "default": [],
                    "markdownDescription": "Additional command-line arguments to pass to `PyGerber`.",
                    "items": {
                        "type": "string"
                    },
                    "scope": "resource",
                    "type": "array"
                },
                "gerber_x3_x2_format_support.customInterpreterPath": {
                    "default": "",
                    "markdownDescription": "Path to a custom Python interpreter to use to run the linter server. You may use variables ${cwd}, ${userHome} and ${workspaceFolder} to express relative paths.",
                    "scope": "window",
                    "type": "string"
                },
                "gerber_x3_x2_format_support.allowAutomaticFallback": {
                    "default": "on",
                    "markdownDescription": "Allow automatic fallback to different interpreter (if present) when selected interpreter fails to start language server.",
                    "scope": "window",
                    "enum": [
                        "off",
                        "on"
                    ]
                },
                "gerber_x3_x2_format_support.pygerberSearchMode": {
                    "title": "PyGerber Search Mode",
                    "markdownDescription": "Where to look for PyGerber installation. `environment` means that extension will attempt to use Python interpreter environment. `extension` will result in extension relying on internal virtual environment.",
                    "scope": "window",
                    "default": "extension",
                    "enum": [
                        "environment",
                        "extension"
                    ]
                },
                "gerber_x3_x2_format_support.extensionPygerberInstallDirectory": {
                    "title": "Extension PyGerber Installation Directory",
                    "type": "string",
                    "scope": "machine",
                    "default": "",
                    "description": "Path to directory containing PyGerber installation created automatically on user request."
                },
                "gerber_x3_x2_format_support.renderDpi": {
                    "title": "Render DPI",
                    "description": "DPI of rendered images.",
                    "default": 1000,
                    "scope": "resource",
                    "type": "integer"
                },
                "gerber_x3_x2_format_support.imageFormat": {
                    "title": "Image Format",
                    "description": "Format of rendered images.",
                    "default": ".png",
                    "scope": "resource",
                    "type": "string"
                },
                "gerber_x3_x2_format_support.layerStyle": {
                    "title": "Layer styles",
                    "description": "Style of rendered images.",
                    "default": "copper_alpha",
                    "scope": "resource",
                    "type": "string",
                    "enum": [
                        "silk",
                        "silk_alpha",
                        "copper",
                        "copper_alpha",
                        "paste_mask",
                        "paste_mask_alpha",
                        "solder_mask",
                        "solder_mask_alpha",
                        "default_grayscale",
                        "debug_1"
                    ]
                },
                "gerber_x3_x2_format_support.ignoredWarnings": {
                    "title": "Ignored Warnings",
                    "type": "array",
                    "scope": "machine",
                    "default": [],
                    "description": "List of warnings ignored by the user."
                }
            }
        }
    }
}
